{"version":3,"sources":["components/Addcategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["Addcategory","setcategorias","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAqB5C,OACI,sBAAMC,SAdU,SAACC,GAEjBA,EAAEC,iBAECJ,EAAWK,OAAQC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBY,SAAEP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCDPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAU,kDAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IAEvB,4BAAIA,QCNHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAd,GAEHY,EAAS,CAELf,KAAMG,EACNU,SAAS,SAKtB,CAAEpB,IAEEqB,EDnB0BI,CAAczB,GAAlCa,EAHsB,EAG5BN,KAAca,EAHc,EAGdA,QAErB,OACI,qCACA,oBAAIJ,UAAY,8CAAhB,SAAgEhB,IAE9DoB,GAAW,mBAAGJ,UAAY,qCAAf,uBAGZ,qBAAKA,UAAU,aAAf,SAGOH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEjBrBe,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,gBAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAU9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAGA,6BAEQ0C,EAAWlB,KAAK,SAAAT,GAAQ,OAErB,cAAE,EAAF,CAEKA,SAAYA,GADPA,Y,MCrBjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eeb3722a.chunk.js","sourcesContent":["//import userEvent from '@testing-library/user-event'\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const Addcategory = ({setcategorias}) => {\r\n   \r\n   const [InputValue, setInputValue] = useState('');\r\n\r\n   const handleImputChange= ( e ) => {\r\n       setInputValue(e.target.value);\r\n   }\r\n\r\n    const handleSumit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(InputValue.trim(). length > 2 ){\r\n\r\n            setcategorias(cats => [ InputValue, ...cats])\r\n            setInputValue('');\r\n\r\n        }\r\n        //console.log('submit hecho')\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={ handleSumit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ InputValue }\r\n                onChange={ handleImputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddcategory.propTypes = {\r\n     \r\n    setcategorias: PropTypes.func.isRequired\r\n\r\n}","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=NHvMYxQl4rr5X7HmIv0S9bGmsNB2GntP`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    \r\n    //console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInRightBig \">\r\n\r\n            <img src={ url } alt={ title }/>\r\n            \r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n\r\n   const { data: images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n        <h3 className = \" animate__animated animate__fadeInRightBig \">{ category }</h3>\r\n\r\n        { loading && <p className = \" animate__animated animate__flash \"> Loading </p>}\r\n\r\n\r\n        {<div className=\"card-gird \">\r\n            \r\n            {\r\n                images.map ( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n            \r\n        </div>} \r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport  { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then( img => {\r\n                   \r\n                setstate({\r\n                    \r\n                    data: img,\r\n                    loading: false\r\n                        \r\n                });\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Addcategory } from './components/Addcategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categorias, setcategorias] = useState(['Dragon Ball']);\r\n\r\n   //const handleAdd = () => {\r\n\r\n   //    setcategorias([...categorias, 'Jugadores de futbol']);\r\n\r\n   //}\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <Addcategory  setcategorias={setcategorias}/>\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map( category => (\r\n\r\n                       < GifGrid \r\n                            key={category}\r\n                            category ={ category }\r\n                        />\r\n\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}